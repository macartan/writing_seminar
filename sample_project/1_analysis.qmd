---
title: "analysis"
format: 
  html:
    embed-resources: true
    toc: true
    code-fold: true
    number-sections: true
---


```{r}
#| label: replication
#| include: false
#' ---
#' title: "Replication code for 'Paper title'"
#' date: "`r format(Sys.Date(), '%d %B %Y')`"
#' author: Your name
#' ---
#' 
#' Generated by `knitr::spin()` from `code.R`.
#' 
#' You can add any text you want to appear in the replication -- but not in the paper -- in chunks like this.
#' 
#' You can run the replication by executing the lines below
#' 
#' knitr::purl("1_analysis.qmd",  "2_replication_code.R")
#' 
#' knitr::spin("2_replication_code.R")  
#' 
#' ## Set up
#' 

```



We will do the analysis in a html document and save all objects for use in presentations and in papers. 

An alternative approach is to do the analysis inside the paper `.qmd` files, though doing the analysis like this has the advantage that the same objects can be used for papers and presentations easily.

# Set up code

```{r}
#| label: setup
#| echo: true
#| eval: true
#| purl: true

pacman::p_load(tidyverse, DeclareDesign, foreign, knitr)

Ys <- c("videoLikep1r", "videoSharep1r", "videoBookmarkp1r", "videoCommentTickedp1r", "watch_percentage_", "skipped_video_")

Y_labels <- c("Like", "Share", "Bookmark", "Comment", "Watch", "Skip")

```


# Bring in data

```{r}
#| label: data
#| echo: true
#| eval: true
#| purl: true

# fabricate(N = 100, X = rnorm(N), W = rnorm(N), Y = X + rnorm(N)) |> write.csv("assets/my_data.csv")

df <- read.csv("assets/my_data.csv")

```

# A figure


```{r}
#| include: false
#' # Figure (title that will appear on replication material)
```


```{r}
#| label: figure
#| fig-cap: "A caption"
#| echo: true
#| eval: true
#| purl: true

figure_1 <-
  df |> 
  ggplot(aes(Y, X)) +
  geom_point() +
  theme_bw()

figure_1  

```

# A table


```{r}
#| include: false
#' # Table (title that will appear on replication material)
```


Note to get nice html display we set `results: 'asis'` in the chunk: 

```{r}
#| label: table
#| echo: true
#| eval: true
#| purl: true
#| results: 'asis'

models <-
list(
`this one` = lm_robust(Y ~ X, data = df),
`that one` = lm_robust(Y ~ X + W, data = df)
)

models |> 
  texreg:::htmlreg(include.ci = FALSE)

```


# Save objects 

for use in papers and presentations

```{r}
save.image("saved/analysis.Rdata")
```